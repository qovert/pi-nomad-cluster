---
- name: Install Nomad
  ansible.builtin.apt:
    name: nomad
    state: present
    update_cache: true
  tags: ['install', 'nomad', 'packages']

- name: Create CNI plugins directory
  ansible.builtin.file:
    path: /opt/cni/bin
    state: directory
    mode: '0755'
    owner: root
    group: root
  tags: ['directories', 'networking', 'cni', 'setup']

- name: Download and install CNI plugins
  ansible.builtin.unarchive:
    src: "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-arm64-v1.3.0.tgz"
    dest: /opt/cni/bin
    remote_src: true
    owner: root
    group: root
    mode: '0755'
    creates: /opt/cni/bin/bridge
  notify: Restart nomad
  tags: ['networking', 'cni', 'plugins', 'download']

- name: Create Nomad directories with proper ownership
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: nomad
    group: nomad
  loop:
    - "{{ zfs_pool_root }}/nomad"
    - "{{ zfs_pool_root }}/nomad/traefik-acme"
    - "{{ zfs_pool_root }}/nomad/secrets"
    - "{{ zfs_pool_root }}/nomad/jobs"
    - "{{ zfs_pool_root }}/code-server"
    - "{{ zfs_pool_root }}/code-server/workspace"
    - "{{ zfs_pool_root }}/mongodb"
  tags: ['directories', 'nomad', 'storage', 'setup']

- name: Write nomad.hcl
  ansible.builtin.template:
    src: nomad.hcl.j2
    dest: /etc/nomad.d/nomad.hcl
    owner: root
    group: root
    mode: '0644'
  notify: Restart nomad
  tags: ['config', 'nomad', 'cluster']

- name: Ensure host volume directories exist
  ansible.builtin.file:
    path: "{{ item.value.path }}"
    state: directory
    mode: '0755'
  loop: "{{ nomad_host_volumes | dict2items }}"
  tags: ['directories', 'volumes', 'nomad', 'storage']

- name: Enable & start nomad
  ansible.builtin.systemd:
    name: nomad
    state: started
    enabled: true
  tags: ['service', 'nomad', 'start']
